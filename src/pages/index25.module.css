/* index.module.css */

/* --- CSS Variables (Customize Colors Here) --- */
:root {
    --primary-color: #6366f1; /* Indigo */
    --primary-color-light: #818cf8;
    --primary-color-dark: #4f46e5;
    --secondary-color: #ec4899; /* Pink */
    --secondary-color-light: #f472b6;
    --secondary-color-dark: #db2777;
    --text-color: #1f2937; /* Dark Gray */
    --text-color-light: #4b5563; /* Medium Gray */
    --bg-color: #ffffff; /* White */
    --bg-color-alt: #f9fafb; /* Off-white */
    --card-bg: linear-gradient(145deg, #ffffff, #f7faff); /* Subtle gradient for cards */
    --border-color: #e5e7eb; /* Light Gray */
    --glow-color-primary: rgba(99, 102, 241, 0.6); /* Primary Glow */
    --glow-color-secondary: rgba(236, 72, 153, 0.5); /* Secondary Glow */
    --gradient-text: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
    --hero-gradient-1: #a8dadc;
    --hero-gradient-2: #f1faee;
    --hero-gradient-3: #e63946;
    --hero-gradient-4: #457b9d;
  }
  
  /* --- Base & Layout --- */
  .container {
    max-width: 1140px;
    margin: 0 auto;
    padding: 0 1rem;
  }
  
  /* --- Hero Section --- */
  .heroBanner {
    padding: 6rem 0 8rem; /* Increased padding */
    text-align: left;
    position: relative;
    overflow: hidden; /* Contain pseudo-elements */
    background-color: var(--bg-color-alt); /* Fallback */
    /* Animated Gradient Background */
    background: radial-gradient(circle at var(--gradX, 50%) var(--gradY, 50%),
        var(--hero-gradient-1),
        var(--hero-gradient-2) 30%,
        var(--hero-gradient-4) 70%,
        var(--hero-gradient-2) 95%);
    background-size: 300% 300%; /* Make gradient larger than the viewport */
    animation: gradientShift 25s ease infinite alternate;
  }
  
  @keyframes gradientShift {
    0% {
      background-position: 0% 50%;
      --gradX: 20%;
      --gradY: 30%;
    }
    50% {
      background-position: 100% 50%;
      --gradX: 80%;
      --gradY: 70%;
    }
    100% {
      background-position: 0% 50%;
      --gradX: 40%;
      --gradY: 10%;
    }
  }
  
  
  .heroContent {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 3rem;
    position: relative; /* Ensure content is above background effects */
    z-index: 1;
  }
  
  .heroText {
    flex: 1;
    max-width: 600px;
  }
  
  .heroText h1 {
    font-size: 3.5rem; /* Larger title */
    font-weight: 700;
    margin-bottom: 1rem;
    color: var(--text-color);
    line-height: 1.2;
  }
  
  .heroR {
    background: var(--gradient-text);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    text-fill-color: transparent; /* Standard property */
    display: inline-block; /* Needed for background-clip */
  }
  
  .heroText .hero__subtitle {
    font-size: 1.25rem;
    color: var(--text-color-light);
    margin-bottom: 1.5rem;
    line-height: 1.6;
  }
  
  .heroLocation {
    font-size: 1rem;
    color: var(--text-color-light);
    margin-bottom: 2.5rem;
    display: flex;
    align-items: center;
  }
  
  .heroLocation a.companyLink {
    color: var(--primary-color);
    font-weight: 600;
    text-decoration: none;
    position: relative;
    transition: color 0.3s ease;
    margin-left: 0.3rem;
  }
  
  .heroLocation a.companyLink::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 2px;
    bottom: -2px;
    left: 0;
    background-color: var(--primary-color-light);
    transform: scaleX(0);
    transform-origin: bottom right;
    transition: transform 0.3s ease-out;
  }
  
  .heroLocation a.companyLink:hover {
    color: var(--primary-color-dark);
  }
  
  .heroLocation a.companyLink:hover::after {
    transform: scaleX(1);
    transform-origin: bottom left;
  }
  
  /* --- Buttons --- */
  .buttons {
    display: flex;
    flex-wrap: wrap; /* Allow wrapping on small screens */
    gap: 1rem;
    align-items: center; /* Align items vertically */
  }
  
  /* Base button enhancements (Docusaurus provides .button) */
  .buttons > :global(.button) {
    padding: 0.8rem 1.8rem;
    font-size: 1rem;
    font-weight: 600;
    border-radius: 8px;
    transition: all 0.3s ease;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    text-decoration: none !important; /* Override potential global link styles */
  }
  
  .buttons > :global(.button--primary) {
    background: var(--primary-color);
    border-color: var(--primary-color);
    color: white;
  }
  .buttons > :global(.button--primary):hover {
    background: var(--primary-color-dark);
    border-color: var(--primary-color-dark);
    transform: translateY(-2px);
    box-shadow: 0 6px 12px rgba(99, 102, 241, 0.2);
  }
  
  .buttons > :global(.button--secondary) {
    background: var(--bg-color);
    border-color: var(--border-color);
    color: var(--primary-color);
  }
  .buttons > :global(.button--secondary):hover {
    background: var(--bg-color-alt);
    border-color: var(--primary-color-light);
    color: var(--primary-color-dark);
    transform: translateY(-2px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.08);
  }
  
  .icon {
    margin-left: 0.3em;
    font-size: 0.9em;
  }
  
  /* Animated Glow Effect */
  .activeGlow {
    position: relative; /* Needed for pseudo-element */
    z-index: 1; /* Ensure it's above non-glowing elements if overlapping */
    animation: pulseGlow 2s infinite alternate;
  }
  
  /* Add a pseudo-element for a layered glow */
  .activeGlow::before {
    content: '';
    position: absolute;
    top: -5px;
    left: -5px;
    right: -5px;
    bottom: -5px;
    border-radius: inherit; /* Match parent's border-radius */
    background: inherit; /* Match parent's background */
    filter: blur(10px);
    opacity: 0.7;
    z-index: -1;
    animation: pulseGlowBg 2s infinite alternate;
  }
  
  /* Specific Glow for Primary Button */
  .buttons > .customBorderWrapper > :global(.button--primary).activeGlow,
  .buttons > .customBorderWrapper > :global(.button--primary).activeGlow::before {
    --current-glow-color: var(--glow-color-primary);
    border-radius: 8px; /* Match button radius */
  }
  
  /* Specific Glow for Secondary Button */
  .buttons > :global(.button--secondary).activeGlow,
  .buttons > :global(.button--secondary).activeGlow::before {
    --current-glow-color: var(--glow-color-primary); /* Or a different color if preferred */
      border-radius: 8px; /* Match button radius */
  }
  
  /* Specific Glow for Email Container */
  .emailContainer.activeGlow {
    --current-glow-color: var(--glow-color-secondary);
      border-radius: 8px; /* Match button radius */
  }
  .emailContainer.activeGlow::before {
    --current-glow-color: var(--glow-color-secondary);
      border-radius: 8px; /* Match button radius */
  }
  
  @keyframes pulseGlow {
    from {
      box-shadow: 0 0 5px 0px var(--current-glow-color), 0 0 8px 2px var(--current-glow-color), 0 4px 6px rgba(0, 0, 0, 0.05);
    }
    to {
      box-shadow: 0 0 15px 3px var(--current-glow-color), 0 0 25px 8px var(--current-glow-color), 0 6px 12px rgba(0, 0, 0, 0.1);
    }
  }
  
  @keyframes pulseGlowBg {
    from {
      opacity: 0.5;
      filter: blur(8px);
    }
    to {
      opacity: 0.8;
      filter: blur(15px);
    }
  }
  
  
  /* Email Copy Button */
  .emailContainer {
    display: inline-flex; /* Changed from flex to inline-flex */
    align-items: center;
    background-color: var(--bg-color);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    padding: 0; /* Remove padding here, add to children */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    position: relative; /* For glow pseudo-element */
    transition: box-shadow 0.3s ease;
    /* Ensure it fits inline with other buttons */
    vertical-align: middle; /* Helps alignment if wrapped */
    height: calc(0.8rem * 2 + 1rem + 2px); /* Match button height: padding*2 + font-size + border*2 */
  
  }
  
  .emailContainer:hover {
     box-shadow: 0 6px 12px rgba(0, 0, 0, 0.08);
  }
  
  .emailText {
    padding: 0.8rem 1rem 0.8rem 1.5rem; /* Adjust padding */
    font-size: 1rem;
    font-weight: 600;
    color: var(--text-color-light);
    white-space: nowrap;
    transition: color 0.3s ease, background-color 0.3s ease; /* Add background transition */
    border-radius: 8px 0 0 8px; /* Round left corners */
  }
  
  .copyButton {
    background-color: var(--bg-color-alt);
    border: none;
    border-left: 1px solid var(--border-color);
    padding: 0.8rem 1rem; /* Match vertical padding */
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 0 8px 8px 0; /* Round right corners */
    transition: background-color 0.3s ease;
    height: 100%; /* Fill container height */
    color: var(--primary-color);
  }
  
  .copyButton:hover {
    background-color: #eef2ff; /* Light indigo background on hover */
    color: var(--primary-color-dark);
  }
  
  .copyIcon {
    font-size: 1em;
    transition: transform 0.2s ease;
  }
  
  .copyButton:active .copyIcon {
    transform: scale(0.9);
  }
  
  
  /* --- Hero Image --- */
  .heroImage {
    flex-shrink: 0;
    position: relative;
  }
  
  .imageWrapper {
    position: relative;
    width: 280px; /* Adjust size as needed */
    height: 280px;
    border-radius: 50%;
    /* Optional: Add a subtle animated border */
    padding: 8px; /* Space for the border */
    background: linear-gradient(45deg, var(--primary-color-light), var(--secondary-color-light));
    animation: rotateBorder 10s linear infinite;
  }
  
  @keyframes rotateBorder {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }
  
  .profileImage {
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    object-fit: cover;
    border: 5px solid var(--bg-color); /* Inner border to separate from gradient */
    cursor: pointer;
    transition: transform 0.3s ease;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }
  
  .profileImage:hover {
    transform: scale(1.05);
  }
  
  .spin {
    animation: spin 1s cubic-bezier(0.68, -0.55, 0.27, 1.55); /* Funky bezier */
  }
  
  @keyframes spin {
    0% {
      transform: rotate(0deg) scale(1);
    }
    50% {
        transform: rotate(180deg) scale(1.1);
    }
    100% {
      transform: rotate(360deg) scale(1);
    }
  }
  
  /* --- General Section Styling --- */
  .aboutSection,
  .skillsSection {
    padding: 5rem 0;
  }
  
  .aboutSection {
     background-color: var(--bg-color);
  }
  
  .skillsSection {
    background-color: var(--bg-color-alt); /* Alternate background */
  }
  
  .sectionTitle {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--text-color);
    margin-bottom: 3rem;
    text-align: center;
    position: relative;
    display: inline-block; /* Center alignment helper */
    left: 50%;
    transform: translateX(-50%);
  }
  
  .sectionTitle::after {
    content: '';
    position: absolute;
    width: 60%; /* Width of the underline relative to title */
    height: 4px;
    bottom: -10px; /* Space below text */
    left: 20%; /* Center the underline */
    background: var(--gradient-text);
    border-radius: 2px;
  }
  
  /* --- About Section --- */
  .aboutText {
    max-width: 800px;
    margin: 0 auto 3rem auto;
    font-size: 1.1rem;
    line-height: 1.7;
    color: var(--text-color-light);
  }
  
  .aboutText p {
    margin-bottom: 1.5rem;
  }
  
  .inlineLink {
    color: var(--primary-color);
    font-weight: 500;
    text-decoration: none;
    position: relative;
    transition: color 0.3s ease;
  }
  
  .inlineLink::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 1px;
    bottom: 0;
    left: 0;
    background-color: var(--primary-color-light);
    transform: scaleX(0);
    transform-origin: bottom right;
    transition: transform 0.3s ease-out;
  }
  
  .inlineLink:hover {
    color: var(--primary-color-dark);
  }
  
  .inlineLink:hover::after {
    transform: scaleX(1);
    transform-origin: bottom left;
  }
  
  /* Docusaurus Tabs Enhancements */
  :global(.tabs-container) {
    margin-top: 2rem;
  }
  
  :global(.tabs__item) {
    font-weight: 600;
    transition: all 0.3s ease;
    border-bottom: 3px solid transparent;
    padding-bottom: 0.8rem !important; /* Ensure enough space */
    margin-bottom: -2px; /* Overlap border */
  }
  
  :global(.tabs__item:hover) {
    color: var(--primary-color);
    border-bottom-color: var(--primary-color-light);
  }
  
  :global(.tabs__item--active) {
    color: var(--primary-color-dark) !important;
    border-bottom-color: var(--primary-color) !important;
    font-weight: 700;
  }
  
  
  /* --- Info Card (Experience/Education) --- */
  .infoCard {
    background: var(--card-bg);
    border: 1px solid var(--border-color);
    border-radius: 12px;
    padding: 2.5rem;
    margin-top: 2rem;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .infoCard:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08);
  }
  
  .infoCard h3 {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--text-color);
    margin-bottom: 2rem;
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 1rem;
  }
  
  .timelineContent {
    position: relative;
  }
  
  /* Optional: Add timeline line */
  .timelineContent::before {
    content: '';
    position: absolute;
    left: 35px; /* Align with logo center approx */
    top: 10px;
    bottom: 10px;
    width: 2px;
    background-color: var(--border-color);
    z-index: 0;
  }
  
  .experienceItem {
    display: flex;
    gap: 1.5rem;
    margin-bottom: 2.5rem;
    padding-bottom: 2.5rem;
    border-bottom: 1px dashed var(--border-color);
    position: relative; /* For timeline dot */
    z-index: 1;
  }
  .experienceItem:last-child {
    margin-bottom: 0;
    padding-bottom: 0;
    border-bottom: none;
  }
  
  /* Timeline dot */
  .experienceItem::before {
    content: '';
    position: absolute;
    left: 27px; /* Adjust to center on the line */
    top: 12px; /* Align vertically with header */
    width: 16px;
    height: 16px;
    background-color: var(--primary-color);
    border: 3px solid var(--bg-color);
    border-radius: 50%;
    z-index: 2;
  }
  
  
  .companyLogo {
    flex-shrink: 0;
    width: 70px; /* Increased size */
    height: 70px;
    border-radius: 50%; /* Make logos circular */
    overflow: hidden;
    background-color: var(--bg-color); /* Background if image fails */
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid var(--border-color);
  }
  
  .companyLogo img {
    width: 90%; /* Slightly smaller than container */
    height: 90%;
    object-fit: contain; /* Use contain to avoid cropping logos */
  }
  
  .experienceHeader {
    flex-grow: 1;
  }
  
  .experienceHeader h4 {
    font-size: 1.2rem;
    font-weight: 600;
    color: var(--text-color);
    margin: 0 0 0.3rem 0;
  }
  
  .experienceDate {
    font-size: 0.9rem;
    color: var(--text-color-light);
    font-weight: 500;
    display: block;
    margin-bottom: 1rem;
  }
  
  .experienceRole {
      font-size: 1.05rem;
      font-weight: 600;
      color: var(--primary-color); /* Use accent color for role */
      margin-top: 1.5rem; /* Space before lists */
      margin-bottom: 0.8rem;
  }
  
  .timelineList {
    list-style: none;
    padding-left: 0; /* Remove default padding */
    margin: 0;
  }
  
  .timelineList li {
    margin-bottom: 0.7rem;
    position: relative;
    padding-left: 1.5rem; /* Space for custom bullet */
    color: var(--text-color-light);
    line-height: 1.6;
  }
  
  .timelineList li::before {
    content: '▹'; /* Custom bullet */
    position: absolute;
    left: 0;
    top: 1px;
    color: var(--primary-color);
    font-weight: bold;
  }
  
  .timelineList ul {
      list-style: none;
      padding-left: 1.5rem; /* Indent nested lists */
      margin-top: 0.7rem;
  }
  
  .timelineList ul li::before {
      content: '▸'; /* Different bullet for nested items */
      color: var(--secondary-color); /* Different color */
  }
  
  .projectsContainer {
    margin-top: 1.5rem;
    padding-top: 1.5rem;
    border-top: 1px solid var(--border-color);
  }
  
  /* Collapsible Project */
  .project {
    margin-top: 1rem;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    overflow: hidden; /* Contain expanded content */
    background: #fdfdff; /* Slightly different background */
  }
  
  .projectHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 1.5rem;
    cursor: pointer;
    background-color: transparent;
    transition: background-color 0.3s ease;
  }
  
  .projectHeader:hover {
    background-color: #f8f9fc;
  }
  
  .projectHeader h4 {
    margin: 0;
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--text-color);
  }
  
  .projectDate {
    font-size: 0.9rem;
    color: var(--text-color-light);
    margin-right: 0.5rem;
  }
  
  .projectChevron {
    color: var(--text-color-light);
    transition: transform 0.3s ease;
  }
  
  .projectChevron.expanded {
    transform: rotate(180deg);
  }
  
  /* Expanded content styles */
  .project .timelineList { /* Target only the UL inside .project */
    max-height: 0;
    opacity: 0;
    overflow: hidden;
    padding: 0 1.5rem; /* Add padding only when expanded */
    margin: 0;
    transition: max-height 0.5s ease-out, opacity 0.4s ease-out 0.1s, padding 0.5s ease-out;
    background-color: #fdfdff;
  }
  
  .projectHeader[aria-expanded="true"] + .timelineList, /* Docusaurus might add aria-expanded */
  .project:has(> .projectHeader[aria-expanded="true"]) .timelineList, /* Modern browsers */
  /* Fallback based on state if needed */
  .project:has(> .projectHeader:focus) .timelineList, /* Or based on click/state */
  .project:has(.expanded) + .timelineList /* If you apply .expanded class on the header */
  {
    /* Style applied when the header indicates expansion */
  }
  
  /* --- Direct targeting if state is on the list itself --- */
  .project > ul.timelineList:not([style*="max-height: 0px"]) /* Crude check if max-height is not 0 */
  {
    max-height: 500px; /* Adjust max-height as needed */
    opacity: 1;
    padding: 1.5rem; /* Apply padding when expanded */
    border-top: 1px solid var(--border-color);
  }
  
  
  /* --- Skills Section --- */
  .skillsGrid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
  }
  
  .skillCard {
    background: var(--card-bg);
    border: 1px solid var(--border-color);
    border-radius: 12px;
    padding: 2rem;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  .skillCard:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08);
  }
  
  .skillCard h3 {
    font-size: 1.3rem;
    font-weight: 600;
    color: var(--text-color);
    margin-bottom: 1.5rem;
    padding-bottom: 0.8rem;
    border-bottom: 1px solid var(--border-color);
  }
  
  .skillCard ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  
  .skillCard li {
    margin-bottom: 0.5rem; /* Space between items */
    border-bottom: 1px solid var(--border-color);
  }
  .skillCard li:last-child {
      border-bottom: none;
  }
  
  .skillItem {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.8rem 0.5rem;
    cursor: pointer;
    border-radius: 4px; /* Subtle rounding for hover state */
    transition: background-color 0.2s ease;
    width: 100%; /* Ensure it fills the li */
  }
  
  .skillItem:hover {
    background-color: #f0f3ff; /* Very light blue/purple */
  }
  
  .skillNameContainer {
      display: flex;
      align-items: center;
      gap: 0.8rem;
      font-weight: 500;
      color: var(--text-color-light);
  }
  
  .skillIcon {
    font-size: 1.2em;
    color: var(--primary-color); /* Default icon color */
    width: 20px; /* Fixed width for alignment */
    text-align: center;
  }
  
  /* Optional: Unique colors for different skill categories */
  .skillCard:nth-child(1) .skillIcon { color: var(--primary-color); } /* Backend */
  .skillCard:nth-child(2) .skillIcon { color: var(--secondary-color); } /* Frontend */
  .skillCard:nth-child(3) .skillIcon { color: #34d399; } /* Others - Teal */
  
  
  .expandIcon {
    color: var(--text-color-light);
    transition: transform 0.3s ease;
    font-size: 0.9em;
  }
  
  .expandIcon.expanded {
    transform: rotate(180deg);
  }
  
  .skillDescription {
    max-height: 0;
    opacity: 0;
    overflow: hidden;
    padding: 0 0.5rem; /* Padding left/right */
    margin: 0;
    font-size: 0.95rem;
    color: var(--text-color-light);
    line-height: 1.6;
    transition: max-height 0.4s ease-out, opacity 0.3s ease-out, padding 0.4s ease-out, margin 0.4s ease-out;
  }
  
  .activeSkill + .skillDescription { /* Target description sibling of active item */
    max-height: 200px; /* Or enough height */
    opacity: 1;
    padding-top: 0.5rem;
    padding-bottom: 1rem;
    margin-top: 0.5rem; /* Add space when expanded */
  }
  
  /* Style active skill item itself */
  .activeSkill {
    background-color: #eef2ff; /* Light indigo background */
  }
  .activeSkill .skillNameContainer {
      color: var(--primary-color-dark);
      font-weight: 600;
  }
  
  
  /* --- Responsiveness --- */
  @media (max-width: 996px) {
    .heroContent {
      flex-direction: column;
      text-align: center;
    }
  
    .heroText {
      max-width: 100%;
      order: 2; /* Text below image */
    }
     .heroText h1 {
       font-size: 3rem;
    }
  
    .heroImage {
      order: 1; /* Image above text */
      margin-bottom: 2rem;
    }
     .imageWrapper {
        width: 220px;
        height: 220px;
    }
  
    .buttons {
      justify-content: center;
    }
  
     .sectionTitle {
         font-size: 2.2rem;
     }
  }
  
  @media (max-width: 768px) {
     .heroBanner {
         padding: 4rem 0 5rem;
     }
     .heroText h1 {
         font-size: 2.5rem;
     }
     .heroText .hero__subtitle {
         font-size: 1.1rem;
     }
  
     .buttons {
         gap: 0.8rem;
     }
     .buttons > :global(.button),
     .emailContainer {
         width: 100%; /* Make buttons and email full width */
         justify-content: center; /* Center text/icons within */
     }
     .emailText {
         flex-grow: 1; /* Allow email text to take space */
         text-align: left; /* Keep text aligned left */
     }
  
    .skillsGrid {
      grid-template-columns: 1fr; /* Stack skill cards */
    }
  
     .aboutSection,
     .skillsSection {
         padding: 3rem 0;
     }
  
     .infoCard, .skillCard {
         padding: 1.5rem;
     }
     .infoCard h3, .skillCard h3 {
         font-size: 1.3rem;
     }
     .experienceItem {
         flex-direction: column;
         align-items: flex-start; /* Align items to start */
         gap: 1rem;
     }
     .timelineContent::before {
         left: 10px; /* Adjust timeline line */
     }
     .experienceItem::before {
         left: 2px; /* Adjust timeline dot */
         top: 5px;
         width: 14px;
         height: 14px;
     }
      .companyLogo {
          width: 50px;
          height: 50px;
          margin-left: 25px; /* Indent content relative to dot/line */
      }
     .experienceHeader, .timelineList, .experienceRole {
         margin-left: 25px; /* Indent content */
     }
  }
  
  @media (max-width: 480px) {
      :root {
          font-size: 15px; /* Slightly reduce base font size */
      }
     .heroText h1 {
         font-size: 2.2rem;
     }
      .imageWrapper {
          width: 180px;
          height: 180px;
      }
  }